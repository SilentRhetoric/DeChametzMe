{
  "version": 3,
  "sources": [
    "../../de_chametz/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BQ;;;;;;;;;;;;;;;AAAA;AACA;AAAsB;AAAtB;AAJR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;;AAmEK;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAnCL;;;AAmCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXL;;AAAA;;;;;;;;;AAWA;;;AAEe;;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAP;AAEI;AAOY;;AACA;;;;;;;;;;AAFJ;;;;;;;;;;;;;;;;;;;;;;;;AADM;;;;;;;;;;;;AADC;;;;;;;;;;;;;;AADI;;;AADN;;;AADH;;;;;;;AADV;;;;AAWQ;;;AAXR;AADJ;AACI;;AADJ;AAiBmB;AAAA;AAAA;AAAA;AAAZ;AAAP;AAGR;;;AAI+C;;AAA7B;AAAA;AAAA;AAAA;AAAN;;AAAA;AAAA;AADJ;AAKkB;;AAAlB;AAAA;;AAAA;AAGA;AACe;AAAA;AAAA;AAAA;AAEJ;;AACM;AACE;;AACV;;;;;;AAAA;;AAAA;;;;;;;;;AAJQ;;;;;AAFjB;;;AAOQ;;;AAPR;AAa4B;;AACH;;AAAZ;AAFT;AAAA;AAAA;AAAA;;AAAA;AADJ;;;;;;AAAA;AAAA;AAAA;AAOA;;AAAA;AAGR;;;AAI+C;;AAA7B;AAAA;AAAA;AAAA;AAAN;;AAAA;AAAkD;AAAlD;AADJ;AAKA;AACe;AAAA;AAAA;AAAA;AAEJ;;AACM;;AACE;AACM;AAAA;AAAA;AAAA;AAAhB;;;;;;;;;;;;AAAA;AAAA;;;;;;;;;AAJQ;;;;;AAFjB;;;AAOQ;;;AAPR;AAUwC;;AAAlB;AAAA;AAAA;AAAA;AAKK;;AACF;;AAAZ;AAFT;AAAA;AAAA;AAAA;;AAAA;AADJ;;;;;;AAAA;AAAA;AAAA;AAOA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.de_chametz.contract.DeChametz.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4"
    },
    "6": {
      "op": "bytecblock \"token_asset_id\" 0x151f7c75 \"chametz_sold\" 0x002a"
    },
    "44": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "46": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "49": {
      "op": "pushbytess \"is_jewish\" \"no\" // \"is_jewish\", \"no\""
    },
    "64": {
      "op": "app_global_put"
    },
    "65": {
      "op": "bytec_0 // \"token_asset_id\""
    },
    "66": {
      "op": "intc_0 // 0"
    },
    "67": {
      "op": "app_global_put"
    },
    "68": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "70": {
      "op": "bz main_bare_routing@8",
      "stack_out": []
    },
    "73": {
      "op": "pushbytess 0x64f4e1ef 0xafb9bee8 0xdd5fb751 // method \"Bootstrap contract()uint64\", method \"Sell chametz(string)string\", method \"Repurchase chametz()string\""
    },
    "90": {
      "op": "txna ApplicationArgs 0"
    },
    "93": {
      "op": "match main_Bootstrap_contract_route@5 main_Sell_chametz_route@6 main_Repurchase_chametz_route@7"
    },
    "101": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "return"
    },
    "103": {
      "block": "main_Repurchase_chametz_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "105": {
      "op": "pushint 2 // CloseOut",
      "defined_out": [
        "CloseOut",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "CloseOut"
      ]
    },
    "107": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "108": {
      "error": "OnCompletion is not CloseOut",
      "op": "assert // OnCompletion is not CloseOut",
      "stack_out": []
    },
    "109": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "111": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "112": {
      "callsub": "smart_contracts.de_chametz.contract.DeChametz.repurchase_chametz",
      "op": "callsub repurchase_chametz",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "115": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0x151f7c75"
      ]
    },
    "116": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%20#0"
      ]
    },
    "117": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "118": {
      "op": "log",
      "stack_out": []
    },
    "119": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "120": {
      "op": "return"
    },
    "121": {
      "block": "main_Sell_chametz_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "123": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "OptIn"
      ]
    },
    "124": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "125": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "126": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "128": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "129": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "132": {
      "callsub": "smart_contracts.de_chametz.contract.DeChametz.sell_chametz",
      "op": "callsub sell_chametz",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "135": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "136": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%14#0"
      ]
    },
    "137": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "138": {
      "op": "log",
      "stack_out": []
    },
    "139": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "140": {
      "op": "return"
    },
    "141": {
      "block": "main_Bootstrap_contract_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "143": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "144": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "145": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "147": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "148": {
      "callsub": "smart_contracts.de_chametz.contract.DeChametz.bootstrap",
      "op": "callsub bootstrap",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "151": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "152": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%7#0"
      ]
    },
    "153": {
      "op": "concat",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "154": {
      "op": "log",
      "stack_out": []
    },
    "155": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "156": {
      "op": "return"
    },
    "157": {
      "block": "main_bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "159": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "162": {
      "op": "txn ApplicationID"
    },
    "164": {
      "op": "!"
    },
    "165": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "166": {
      "op": "intc_1 // 1"
    },
    "167": {
      "op": "return"
    },
    "168": {
      "subroutine": "smart_contracts.de_chametz.contract.DeChametz.bootstrap",
      "params": {},
      "block": "bootstrap",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "171": {
      "op": "txn Sender"
    },
    "173": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "175": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "176": {
      "op": "assert",
      "stack_out": []
    },
    "177": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "178": {
      "op": "bytec_0 // \"token_asset_id\"",
      "defined_out": [
        "\"token_asset_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"token_asset_id\""
      ]
    },
    "179": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "180": {
      "error": "check self.token_asset_id exists",
      "op": "assert // check self.token_asset_id exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "181": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "182": {
      "op": "assert",
      "stack_out": []
    },
    "183": {
      "op": "itxn_begin"
    },
    "184": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "186": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "188": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "190": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "192": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "194": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "196": {
      "op": "pushbytes \"https://dechametz.me\"",
      "defined_out": [
        "\"https://dechametz.me\""
      ],
      "stack_out": [
        "\"https://dechametz.me\""
      ]
    },
    "218": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": []
    },
    "220": {
      "op": "pushbytes \"4CHAMETZ\"",
      "defined_out": [
        "\"4CHAMETZ\""
      ],
      "stack_out": [
        "\"4CHAMETZ\""
      ]
    },
    "230": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "232": {
      "op": "pushbytes \"ForChametz\"",
      "defined_out": [
        "\"ForChametz\""
      ],
      "stack_out": [
        "\"ForChametz\""
      ]
    },
    "244": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "246": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "247": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": []
    },
    "249": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "250": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "252": {
      "op": "pushint 10000000 // 10000000",
      "defined_out": [
        "10000000"
      ],
      "stack_out": [
        "10000000"
      ]
    },
    "257": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "259": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "261": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "263": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "264": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "266": {
      "op": "itxn_submit"
    },
    "267": {
      "op": "bytec_0 // \"token_asset_id\""
    },
    "268": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "\"token_asset_id\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"token_asset_id\"",
        "new_state_value%0#0"
      ]
    },
    "270": {
      "op": "app_global_put",
      "stack_out": []
    },
    "271": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "272": {
      "op": "bytec_0 // \"token_asset_id\"",
      "stack_out": [
        "0",
        "\"token_asset_id\""
      ]
    },
    "273": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "274": {
      "error": "check self.token_asset_id exists",
      "op": "assert // check self.token_asset_id exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "275": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "276": {
      "retsub": true,
      "op": "retsub"
    },
    "277": {
      "subroutine": "smart_contracts.de_chametz.contract.DeChametz.sell_chametz",
      "params": {
        "chametz#0": "bytes"
      },
      "block": "sell_chametz",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "280": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "282": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "283": {
      "op": "bytec_0 // \"token_asset_id\"",
      "defined_out": [
        "\"token_asset_id\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"token_asset_id\""
      ]
    },
    "284": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "285": {
      "error": "check self.token_asset_id exists",
      "op": "assert // check self.token_asset_id exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "286": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "288": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "stack_out": [
        "value%0#0"
      ]
    },
    "289": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "290": {
      "error": "Must not be holding a ForChametz token already to sell chametz",
      "op": "assert // Must not be holding a ForChametz token already to sell chametz",
      "stack_out": []
    },
    "291": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "293": {
      "op": "bytec_2 // \"chametz_sold\"",
      "defined_out": [
        "\"chametz_sold\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"chametz_sold\""
      ]
    },
    "294": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"chametz_sold\"",
        "chametz#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"chametz_sold\"",
        "chametz#0 (copy)"
      ]
    },
    "296": {
      "op": "app_local_put",
      "stack_out": []
    },
    "297": {
      "op": "itxn_begin"
    },
    "298": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "299": {
      "op": "bytec_0 // \"token_asset_id\"",
      "stack_out": [
        "0",
        "\"token_asset_id\""
      ]
    },
    "300": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "301": {
      "error": "check self.token_asset_id exists",
      "op": "assert // check self.token_asset_id exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "302": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "304": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0"
      ]
    },
    "305": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "307": {
      "op": "pushbytes 0x53656c6c",
      "defined_out": [
        "0x53656c6c",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0x53656c6c"
      ]
    },
    "313": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0x53656c6c",
        "chametz#0 (copy)"
      ]
    },
    "315": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Note_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Note_idx_0#0"
      ]
    },
    "316": {
      "op": "itxn_field Note",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "318": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0"
      ]
    },
    "320": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "322": {
      "op": "itxn_field Sender",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "324": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "325": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "327": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "329": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "330": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "332": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "333": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "335": {
      "op": "itxn_submit"
    },
    "336": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "338": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "to_encode%0#0"
      ]
    },
    "340": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "342": {
      "op": "bytec_3 // 0x002a",
      "defined_out": [
        "0x002a",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "0x002a"
      ]
    },
    "343": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "344": {
      "op": "frame_dig -1",
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "chametz#0 (copy)"
      ]
    },
    "346": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "347": {
      "op": "pushbytes 0xacff50a3 // method \"Sale(address,uint64,string)\"",
      "defined_out": [
        "Method(Sale(address,uint64,string))",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "Method(Sale(address,uint64,string))"
      ]
    },
    "353": {
      "op": "swap",
      "stack_out": [
        "Method(Sale(address,uint64,string))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "354": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "355": {
      "op": "log",
      "stack_out": []
    },
    "356": {
      "op": "frame_dig -1",
      "stack_out": [
        "chametz#0 (copy)"
      ]
    },
    "358": {
      "retsub": true,
      "op": "retsub"
    },
    "359": {
      "subroutine": "smart_contracts.de_chametz.contract.DeChametz.repurchase_chametz",
      "params": {},
      "block": "repurchase_chametz",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "362": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "364": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "365": {
      "op": "bytec_0 // \"token_asset_id\"",
      "defined_out": [
        "\"token_asset_id\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"token_asset_id\""
      ]
    },
    "366": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "367": {
      "error": "check self.token_asset_id exists",
      "op": "assert // check self.token_asset_id exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "368": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "370": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "stack_out": [
        "value%0#0"
      ]
    },
    "371": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "1"
      ]
    },
    "372": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "373": {
      "error": "Must hold a ForChametz token to repurchase chametz",
      "op": "assert // Must hold a ForChametz token to repurchase chametz",
      "stack_out": []
    },
    "374": {
      "op": "itxn_begin"
    },
    "375": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "376": {
      "op": "bytec_0 // \"token_asset_id\"",
      "stack_out": [
        "0",
        "\"token_asset_id\""
      ]
    },
    "377": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "378": {
      "error": "check self.token_asset_id exists",
      "op": "assert // check self.token_asset_id exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "379": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "381": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0"
      ]
    },
    "383": {
      "op": "dup2",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%2#0"
      ]
    },
    "384": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%2#0",
        "0"
      ]
    },
    "385": {
      "op": "bytec_2 // \"chametz_sold\"",
      "defined_out": [
        "\"chametz_sold\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%2#0",
        "0",
        "\"chametz_sold\""
      ]
    },
    "386": {
      "op": "app_local_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "387": {
      "error": "check self.chametz_sold exists for account",
      "op": "assert // check self.chametz_sold exists for account",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "388": {
      "op": "pushbytes 0x52657075726368617365",
      "defined_out": [
        "0x52657075726368617365",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "0x52657075726368617365"
      ]
    },
    "400": {
      "op": "swap",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0x52657075726368617365",
        "maybe_value%2#0"
      ]
    },
    "401": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_Note_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Note_idx_0#0"
      ]
    },
    "402": {
      "op": "itxn_field Note",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "404": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetSender_idx_0#0"
      ]
    },
    "406": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "408": {
      "op": "itxn_field Sender",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "410": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "1"
      ]
    },
    "411": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "413": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "415": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "416": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "418": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "419": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "421": {
      "op": "itxn_submit"
    },
    "422": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "424": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "425": {
      "op": "bytec_2 // \"chametz_sold\"",
      "stack_out": [
        "tmp%3#0",
        "0",
        "\"chametz_sold\""
      ]
    },
    "426": {
      "op": "app_local_get_ex",
      "defined_out": [
        "chametz_repurchased#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "maybe_exists%3#0"
      ]
    },
    "427": {
      "error": "check self.chametz_sold exists for account",
      "op": "assert // check self.chametz_sold exists for account",
      "stack_out": [
        "chametz_repurchased#0"
      ]
    },
    "428": {
      "op": "txn Sender",
      "defined_out": [
        "chametz_repurchased#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "tmp%4#0"
      ]
    },
    "430": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "chametz_repurchased#0",
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "432": {
      "op": "itob",
      "defined_out": [
        "chametz_repurchased#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "433": {
      "op": "concat",
      "defined_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "434": {
      "op": "bytec_3 // 0x002a",
      "defined_out": [
        "0x002a",
        "chametz_repurchased#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%2#0",
        "0x002a"
      ]
    },
    "435": {
      "op": "concat",
      "defined_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "436": {
      "op": "dig 1",
      "defined_out": [
        "chametz_repurchased#0",
        "chametz_repurchased#0 (copy)",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%3#0",
        "chametz_repurchased#0 (copy)"
      ]
    },
    "438": {
      "op": "concat",
      "defined_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "439": {
      "op": "pushbytes 0xb2e30774 // method \"Repurchase(address,uint64,string)\"",
      "defined_out": [
        "Method(Repurchase(address,uint64,string))",
        "chametz_repurchased#0",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "encoded_tuple_buffer%4#0",
        "Method(Repurchase(address,uint64,string))"
      ]
    },
    "445": {
      "op": "swap",
      "stack_out": [
        "chametz_repurchased#0",
        "Method(Repurchase(address,uint64,string))",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "446": {
      "op": "concat",
      "defined_out": [
        "chametz_repurchased#0",
        "event%0#0"
      ],
      "stack_out": [
        "chametz_repurchased#0",
        "event%0#0"
      ]
    },
    "447": {
      "op": "log",
      "stack_out": [
        "chametz_repurchased#0"
      ]
    },
    "448": {
      "retsub": true,
      "op": "retsub"
    }
  }
}